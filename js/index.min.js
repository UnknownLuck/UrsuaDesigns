var db = {}, products = [], images = []; function findProductsAndDetails() { for (var e = document.getElementsByClassName("item-title"), t = document.getElementsByClassName("add-to-cart-button"), a = document.getElementsByClassName("item-image"), r = 0; r < e.length; r++) { for (var s, n, o = e[r].innerText, i = "", d = 0; d < o.length; d++)" " != o[d] ? i += o[d] : i += "-"; var c = document.getElementById(i); s = "Custom Order" == e[r].innerText ? "Variable" : c.querySelectorAll(".product-price")[0].innerText, n = a[r].attributes[2].value, products.push([e[r].innerText, s, n]) } for (r = 0; r < t.length; r++) { t[r].addEventListener("click", e => { addToCart(e.target), e.target.setAttribute("data-dismiss", "modal") }, !1); var l = products[r][0]; for (i = "", d = 0; d < l.length; d++)" " != l[d] ? i += products[r][0][d] : i += "-"; t[r].classList.add(i) } for (r = 0; r < products.length; r++)db[r] = { productName: products[r][0] }; for (r = 0; r < products.length; r++)images.push(a[r].attributes[2].value); localStorage.setItem("storedData", JSON.stringify(db)) } function setupNavbar() { "use strict"; $('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function () { if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) { var e = $(this.hash); if ((e = e.length ? e : $("[name=" + this.hash.slice(1) + "]")).length) return $("html, body").animate({ scrollTop: e.offset().top - 54 }, 1e3, "easeInOutExpo"), !1 } }), $(".js-scroll-trigger").click(function () { $(".navbar-collapse").collapse("hide") }), $("body").scrollspy({ target: "#nav", offset: 56 }); var e = function () { $("#nav").offset().top > 100 ? $("#nav").addClass("navbar-shrink") : $("#nav").removeClass("navbar-shrink") }; e(), $(window).scroll(e) } function updateCartModal(e) { var t = getCart(!0); JSON.parse(localStorage.getItem("storedData")); if (!t) return console.log("No cart data"); if (!e) { var a = document.getElementById("product-table"); a.innerHTML = ""; for (var r = 0; r < Object.keys(t).length; r++) { for (var s = t[r], n = (getCart(!0)[r], 0), o = 0; o < products.length; o++)s.productName == products[o][0] && (n = o); if ("Custom Order" == s.productName) a.innerHTML += "<tr id='item-" + r + "'><td class='w-25'><img src='" + products[n][2] + "'class='img-fluid img-thumbnail' id='product-img-" + r + "' alt=''></td><td id='product-name-" + r + "'><span class='cart-product'>Custom Order</span><span class='price-break'></span><span class='cart-product-price'>$" + s.price + "</span></td><td id='product-quanity-" + r + "'><input class='product-quantity' id='product-quantity-" + r + "-value' type='number' min='1' max='10' value='" + s.amount + "' onchange=updateProductCounts() onkeyup=enforceMinMax(this)></td><td class='product-total-price' id='product-total-price-" + r + "'>$" + getTotalPriceAtCartIndex(r) + "</td><td><a href='#' id='product-remove-" + r + "' class='btn btn-danger btn-rm' onclick='removeProduct(this.id);'><i class='fa fa-times'></i></a></td></tr>"; else { var i = ""; for (o = 0; o < Object.keys(s.options).length; o++)i += Object.keys(s.options)[o] + ": " + s.options[Object.keys(s.options)[o]], o != Object.keys(s.options).length - 1 && (i += " / "); a.innerHTML += "<tr id='item-" + r + "'><td class='w-25'><img src='" + products[n][2] + "'class='img-fluid img-thumbnail' id='product-img-" + r + "' alt=''></td><td id='product-name-" + r + "'><span class='cart-product'>" + products[n][0] + "</span><span class='price-break'></span><span class='cart-product-price'>" + products[n][1] + "</span><span class='price-break'></span><span class='product-options'>" + i + "</span></td><td id='product-quanity-" + r + "'><input class='product-quantity' id='product-quantity-" + r + "-value' type='number' min='1' max='10' value='" + t[r].amount + "' onchange=updateProductCounts() onkeyup=enforceMinMax(this)></td><td class='product-total-price' id='product-total-price-" + r + "'>$" + getTotalPriceAtCartIndex(r) + "</td><td><a href='#' id='product-remove-" + r + "' class='btn btn-danger btn-rm' onclick='removeProduct(this.id);'>\t<i class='fa fa-times'></i></a></td></tr>" } } } orderSubtotal = 0, orderTaxes = 0; for (r = 0; r < Object.keys(t).length; r++) { s = t[r], getCart(!0)[r]; var d = 0, c = 0; c = "Custom Order" == s.productName ? 6.5 * (d = s.price * s.amount) / 100 : 6.5 * (d = parseFloat(getTotalPriceAtCartIndex(r))) / 100, orderSubtotal += d, orderTaxes += c } var l = parseFloat(document.getElementById("shipping-options").value), p = orderTaxes + 6.5 * l / 100, u = orderSubtotal + l + p, m = document.getElementById("cart-subtotal"), g = document.getElementById("cart-shipping"), h = document.getElementById("cart-taxes"), f = document.getElementById("cart-total"); m.innerText = "$" + orderSubtotal.toFixed(2), g.innerText = "$" + l.toFixed(2), h.innerText = "$" + p.toFixed(2), f.innerText = "$" + u.toFixed(2) } async function addToCart(e) { for (var t = e.classList, a = "", r = "", s = {}, n = 0; n < t.length; n++)"add-to-cart-button" != t[n] && "sqs-block-button-element" != t[n] && (a = t[n]); var o = document.getElementById("options-container-" + a).querySelectorAll(".option"), i = {}; for (n = 0; n < o.length; n++) { for (var d = o[n].children, c = "", l = 0, p = "", u = 0; u < d.length; u++)"h4" == d[u].localName ? c = d[u].innerText : (l = u, p = d[u].localName); var m = ""; ("select" == p || "input" == p && "text" == d[l].type) && (m = d[l].value), i[c] = m } if ("Custom-Order" == a) r = "Custom Order"; else { var g = 0, h = ""; for (n = 0; n < a.length; n++)"-" == a[n] ? h += " " : h += a[n]; for (n = 0; n < products.length; n++)h == products[n][0] && (g = n); r = products[g][0] } if (s = { productName: r, amount: 1, options: i }, "Custom Order" == r && (s.price = parseFloat(document.getElementById("option-customorder-price").value)), "undefined" != typeof Storage) if (localStorage.getItem("cartData")) { var f = JSON.parse(localStorage.getItem("cartData")), y = Object.keys(f).length, v = !1; for (n = 0; n < y; n++)if (f[n].productName == s.productName) if ("Custom-Order" == a) { if (f[n].price == s.price) { v = !0, f[n].amount++; break } } else for (u = 0; u < Object.keys(s.options).length; u++) { var b = Object.keys(s.options)[u]; if (s.options[b] != f[n].options[b]) break; if (u == Object.keys(s.options).length - 1) { v = !0, f[n].amount++; break } } v || (f[y] = s); var _ = JSON.stringify(f); localStorage.setItem("cartData", _) } else { f = { 0: s }, _ = JSON.stringify(f); localStorage.setItem("cartData", _) } updateCartModal(!1) } function getCartPrice() { return document.getElementById("cart-total").innerText.split("$").pop() } function getCart(e) { if ("undefined" != typeof Storage) { var t = localStorage.getItem("cartData"); return !!t && (e ? JSON.parse(t) : t) } } function setCart(e) { "undefined" != typeof Storage && localStorage.setItem("cartData", e), updateCartModal(!1) } function clearCart() { setCart("{}") } function removeProduct(e) { e = e.split("-").pop(); var t = getCart(!0), a = {}; delete t[e]; for (var r = 0, s = 0; r < Object.keys(t).length; r++, s++)t[r] || (s += 1), a[r] = t[s]; setCart(JSON.stringify(a)), updateCartModal(!1) } function updateProductCounts() { for (var e, t = getCart(!0), a = document.getElementsByClassName("product-quantity"), r = 0; r < Object.keys(t).length; r++) { var s = a[r]; t[r]; parseInt(s.value) ? t[r].amount = parseInt(s.value) : t[r].amount = 1 } e = t, setCart(JSON.stringify(e)), updateCartModal(!0) } function enforceMinMax(e) { "" != e.value && (parseInt(e.value) < parseInt(e.min) && (e.value = e.min), parseInt(e.value) > parseInt(e.max) && (e.value = e.max)) } document.addEventListener("DOMContentLoaded", function () { var e = [].slice.call(document.querySelectorAll("img.lazy")); if ("IntersectionObserver" in window) { let t = new IntersectionObserver(function (e, a) { e.forEach(function (e) { if (e.isIntersecting) { let a = e.target; a.src = a.dataset.src, a.srcset = a.dataset.srcset, a.classList.remove("lazy"), t.unobserve(a) } }) }); e.forEach(function (e) { t.observe(e) }) } }), setupNavbar(), findProductsAndDetails(), updateCartModal(!1), jQuery; for (var collapsibles = document.getElementsByClassName("collapsible"), i = 0; i < collapsibles.length; i++)collapsibles[i].addEventListener("click", function () { this.classList.toggle("collapsibleActive"); var e = this.nextElementSibling; e.style.maxHeight ? e.style.maxHeight = null : e.style.maxHeight = e.scrollHeight + "px" }); function submitOrder(e) { var t = ""; e.payer.name.given_name + " " + e.payer.name.surname && (t = e.payer.name.given_name + " " + e.payer.name.surname); var a = ""; e.purchase_units[0].shipping.name.full_name && (a = e.purchase_units[0].shipping.name.full_name); var r = ""; e.payer.email_address && (r = e.payer.email_address); var s = ""; e.payer.phone && (s = e.payer.phone.phone_number.national_number); var n = "", o = ""; n = e.payer.address.address_line_2 ? e.payer.address.address_line_1 + ", " + e.payer.address.address_line_2 + ", " + e.payer.address.admin_area_2 + ", " + e.payer.address.admin_area_1 + ", " + e.payer.address.country_code + " " + e.payer.address.postal_code : e.payer.address.address_line_1 + ", " + e.payer.address.admin_area_2 + ", " + e.payer.address.admin_area_1 + ", " + e.payer.address.country_code + " " + e.payer.address.postal_code, o = e.purchase_units[0].shipping.address.address_line_2 ? e.purchase_units[0].shipping.address.address_line_1 + ", " + e.purchase_units[0].shipping.address.address_line_2 + ", " + e.purchase_units[0].shipping.address.admin_area_2 + ", " + e.purchase_units[0].shipping.address.admin_area_1 + ", " + e.purchase_units[0].shipping.address.country_code + " " + e.purchase_units[0].shipping.address.postal_code : e.purchase_units[0].shipping.address.address_line_1 + ", " + e.purchase_units[0].shipping.address.admin_area_2 + ", " + e.purchase_units[0].shipping.address.admin_area_1 + ", " + e.purchase_units[0].shipping.address.country_code + " " + e.purchase_units[0].shipping.address.postal_code; var i = { billing: { name: t, email: r, phone_number: s, address: n }, cart: getCart(!0), shipping: { name: a, address: o } }; $.ajax({ url: "https://script.google.com/macros/s/AKfycbxmCjhwVd1e_306CCDWEAXvBU7DVDZZtzRRT6HSYHipCn1p68G8/exec", data: { CartData: JSON.stringify(i.cart), Name: i.billing.name, Address: i.shipping.address, Email: i.billing.email, Subtotal: parseFloat(document.getElementById("cart-subtotal").innerText.split("$")[1]).toFixed(2), Shipping: parseFloat(document.getElementById("cart-shipping").innerText.split("$")[1]).toFixed(2), Taxes: parseFloat(document.getElementById("cart-taxes").innerText.split("$")[1]).toFixed(2), Total: parseFloat(document.getElementById("cart-total").innerText.split("$")[1]).toFixed(2), Details: JSON.stringify(e) }, type: "GET", success: function (e) { }, error: function (e, t, a) { console.error(e, t, a) } }), clearCart() } function getTotalPriceAtCartIndex(e) { var t = getCart(!0), a = 0; if ("Custom Order" == t[e].productName) a = t[e].price * t[e].amount; else for (var r = 0; r < products.length; r++)t[e].productName == products[r][0] && (a = products[r][1].split("$").pop() * t[e].amount); return a.toFixed(2) } function errData(e) { console.log(e) }